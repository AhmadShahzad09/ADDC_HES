mongo.database: calls
mongo.address: mongodb://root:example@localhost:27017/admin

topic.loadprofile1: meter/loadprofile1
#topic.loadprofile1: $share/group01/meter/loadprofile1

mqtt.server:
  ip: localhost:1883
  #ip: afalcolea.duckdns.org:1883
  user: admin
  password: adminpass
  inflight: 32

mqtt:
  topics:
    gateway:
      heartbeat: gateway/heartbeat
      meter-discovery: gateway/comission
      events: gateway/events
      alarms: gateway/alarms
      real-time-clock: gateway/clocktime
      set-time-synchronization: gateway/synchronization
      read-profile-intervalperiod: gateway/getinterval
      set-profile-intervalperiod: gateway/setinterval
      firmware-update: gateway/firmwareupdate
      change-mqtt-password: gateway/password
    meter:
      energy-registers: meter/energyprofile
      max-demand-registers: meter/maxdemand
      load-profile1: meter/loadprofile1
      load-profile2: meter/loadprofile2
      power-quality-profile: meter/powerqualityprofile
      instrumentation-profile: meter/instrumentationprofile
      water-profile: meter/waterprofile
      billing-profile: meter/billingprofile
      instantaneous-registers: meter/instregisters
      events: meter/events
    on-demand:
      energy-registers: meter/energyprofile # (Absolute Profile)
      max-demand-registers: meter/maxdemand
      load-profile1: meter/loadprofile1
      load-profile2: meter/loadprofile2
      power-quality-profile: meter/powerqualityprofile
      instrumentation-profile: meter/instrumentationprofile
      instantaneous-values: meter/instregisters
      billing-profile: meter/billingprofile
      real-time-clock: meter/clocktime
      load-profile-capture-period: meter/getprofileinterval
      set-load-profile-capture-period: meter/setprofilecaptureperiod
      get-switch-status: meter/switchstatus
      reconnection: meter/reconnection
      billing-reset: meter/billingreset # Maximum Demand Reset ->  MDI / End of billing period Reset
      set-load-limitation: meter/loadlimit # Load Curtailment
      get-load-limit-threshold: meter/limitthreshold
      set-billing-date: meter/setbillingdate
      get-billing-date: meter/getbillingdate
      clear-alarms: meter/clearalarms
      set-demand-integration-period: meter/setdemandintperiod
      get-demand-integration-period: meter/getdemandintperiod
      set-payment-mode: meter/setpaymentmode
      get-payment-mode: meter/getpaymentmode
      set-metering-mode: meter/setmeteringmode
      get-metering-mode: meter/getmeteringmode
      set-tariff-agreement: meter/toutariff # TOU Table
      get-current-active-tariff: meter/activetariff
      firmware-upgrade: meter/firmware
      get-firmware-upgrade-status: meter/firmwarestatus
      change-meter-password: meter/password
      set-volt-range-low: meter/setvoltrangelow # (Threshold for voltage sag)
      set-volt-range-up: meter/setvoltrangeup # (Threshold for voltage swell)
      get-volt-range-low: meter/getvoltrangelow # (Threshold for voltage sag)
      get-volt-range-up: meter/getvoltrangeup # (Threshold for voltage swell)
      set-current-range-low: meter/setcurrentrangelow
      set-current-range-up: meter/setcurrentrangeup
      get-current-range-low: meter/getcurrentrangelow
      get-current-range-up: meter/getcurrentrangeup
      get-meter-status: meter/status
      gateway-name-plate-information: gateway/nameplate
      gateway-ping: gateway/ping
      meter-ping: meter/ping
      meter-name-plate-information: meter/nameplate

param.find.meter: "http://localhost:8082/oum-ws/services/rest/EquipmentWebService/findEquipmentStatus/"

param.gateway.params: "http://localhost:8082/oum-ws/services/rest/EquipmentWebService/getGatewayParams/"

finish.commission: "http://localhost:8082/oum-ws/services/rest/EquipmentWebService/finnishCommission"

changeip.gateway: "http://localhost:8082/oum-ws/services/rest/EquipmentWebService/assignCommunicationEquipmentAddressProperty"
changestatus.gateway: "http://localhost:8082/oum-ws/services/rest/EquipmentWebService/updateEquipmentStatus"
find.event.data: "http://localhost:8082/oum-ws/services/rest/EquipmentWebService/findEventDataTypeCodeByObisCode"
user.hb: admin
pass.hb: admin

spring:
  main:
    allow-bean-definition-overriding: true
  data:
    jpa.repositories.enabled: true
  datasource:
    initialization-mode: never
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://10.170.24.68:5432/MDM_ADDC
    username: postgres
    password: changeIt!
    continueOnError: true
  #  profiles:
  #    active: dev
  cloud.stream:
    bindings:
      etisalat-in: 
        contentType: application/json;charset=UTF-8
        destination: etisalat-topic
        group: etisalat-group
      request:
        consumer:
          concurrency: 1
          partitioned: true
        contentType: application/json;charset=UTF-8
        destination: request-topic
        group: request-group
      mdm-measure:
        contentType: application/json;charset=UTF-8
        destination: measure-topic
      mdm-reading:
        contentType: application/json;charset=UTF-8
        destination: reading-topic
      mdm-instantaneous-value: 
        contentType: application/json;charset=UTF-8
        destination: instantaneous-value-topic
      mdm-meter-event: 
        contentType: application/json;charset=UTF-8
        destination: meter-event-topic
     
    kafka:
      binder:
        brokers: "localhost:9092"
        autoAddPartitions: true
  #  data.mongodb.uri: mongodb://platformadmin:0pen-platf0rm-2018!@10.86.1.47:27017/admin
  data.mongodb:
    host: localhost
    database: calls
    username: root
    password: example
    authentication-database: admin

logging:
  pattern:
    console: "%d{dd-MM-yyyy HH:mm:ss.SSS} %([%thread]) %(%-5level) %logger.%M - %msg%n"
  level:
    root: INFO
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG

server:
  servlet.context-path: /OnesaitMeterCollector
  port: 8011

execution:
  timeout: 86400000
